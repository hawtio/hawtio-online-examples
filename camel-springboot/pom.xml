<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.hawt.online.examples</groupId>
    <artifactId>hawtio-online-examples</artifactId>
    <version>1.0.0</version>
  </parent>

  <artifactId>hawtio-online-example-camel-springboot</artifactId>
  <name>Hawtio Online Camel Spring Boot Example</name>
  <description>Hawtio Online :: Sample Camel Spring Boot 3.x application</description>

  <properties>
    <jkube.container-image.name>quay.io/hawtio/%a:latest</jkube.container-image.name>
    <!-- Use Jib in order not to depend on docker nor podman -->
    <jkube.build.strategy>jib</jkube.build.strategy>

    <jolokia.protocol>https</jolokia.protocol>
    <jolokia.host>*</jolokia.host>
    <jolokia.port>8778</jolokia.port>
    <jolokia.useSslClientAuthentication>true</jolokia.useSslClientAuthentication>
    <jolokia.caCert>/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt</jolokia.caCert>
    <jolokia.clientPrincipal.1>cn=hawtio-online.hawtio.svc</jolokia.clientPrincipal.1>
    <jolokia.extendedClientCheck>true</jolokia.extendedClientCheck>
    <jolokia.discoveryEnabled>false</jolokia.discoveryEnabled>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot-version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.camel.springboot</groupId>
        <artifactId>camel-spring-boot-dependencies</artifactId>
        <version>${camel-version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Camel -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-endpointdsl-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-stream-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-quartz-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-timer-starter</artifactId>
    </dependency>
    <!--
      This dependency is mandatory for enabling Camel management
      via JMX / Hawtio.
    -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-management-starter</artifactId>
    </dependency>
    <!--
      This dependency is required for viewing Camel routes source XML.
    -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-spring-boot-xml-starter</artifactId>
    </dependency>
    <!--
      To enable Camel plugin debugging feature, add this dependency.
    -->
    <dependency>
      <groupId>org.apache.camel.springboot</groupId>
      <artifactId>camel-debug-starter</artifactId>
    </dependency>

    <!-- Spring Boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-undertow</artifactId>
      <exclusions>
        <exclusion>
          <groupId>io.undertow</groupId>
          <artifactId>undertow-websockets-jsr</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin-version}</version>
        <executions>
          <execution>
            <id>copy-jolokia-agent</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.jolokia</groupId>
                  <artifactId>jolokia-agent-jvm</artifactId>
                  <version>${jolokia-version}</version>
                  <classifier>javaagent</classifier>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.basedir}/target</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <version>${spring-boot-version}</version>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.eclipse.jkube</groupId>
        <artifactId>kubernetes-maven-plugin</artifactId>
        <version>${kubernetes-maven-plugin-version}</version>
        <executions>
          <execution>
            <phase>install</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <images>
            <image>
              <name>${jkube.container-image.name}</name>
              <build>
                <from>registry.access.redhat.com/ubi9/openjdk-21:latest</from>
                <workdir>/deployments</workdir>
                <assembly>
                  <targetDir>/deployments</targetDir>
                  <inline>
                    <id>jolokia-agent</id>
                    <files>
                      <file>
                        <source>
                          ${project.basedir}/target/jolokia-agent-jvm-${jolokia-version}-javaagent.jar
                        </source>
                        <outputDirectory>opt</outputDirectory>
                      </file>
                    </files>
                  </inline>
                </assembly>
                <env>
                  <JAVA_APP_DIR>/deployments</JAVA_APP_DIR>
                  <JAVA_MAIN_CLASS>org.springframework.boot.loader.launch.JarLauncher</JAVA_MAIN_CLASS>
                  <JAVA_OPTS_APPEND>-javaagent:opt/jolokia-agent-jvm-${jolokia-version}-javaagent.jar=protocol=${jolokia.protocol},host=${jolokia.host},port=${jolokia.port},useSslClientAuthentication=${jolokia.useSslClientAuthentication},caCert=${jolokia.caCert},clientPrincipal.1=${jolokia.clientPrincipal.1},extendedClientCheck=${jolokia.extendedClientCheck},discoveryEnabled=${jolokia.discoveryEnabled}</JAVA_OPTS_APPEND>
                </env>
                <ports>
                  <port>8080</port>
                  <port>8778</port>
                  <port>9779</port>
                </ports>
              </build>
            </image>
          </images>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
